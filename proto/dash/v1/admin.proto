syntax = "proto3";

package dash.v1;

import "buf/validate/validate.proto";
import "entpb/entpb.proto";
import "google/api/annotations.proto";
import "sphere/binding/binding.proto";
import "sphere/errors/errors.proto";

service AdminService {
  rpc ListAdmins(ListAdminsRequest) returns (ListAdminsResponse) {
    option (google.api.http) = {get: "/api/admin/list"};
  }
  rpc CreateAdmin(CreateAdminRequest) returns (CreateAdminResponse) {
    option (google.api.http) = {
      post: "/api/admin/create"
      body: "*"
    };
  }
  rpc UpdateAdmin(UpdateAdminRequest) returns (UpdateAdminResponse) {
    option (google.api.http) = {
      post: "/api/admin/update"
      body: "*"
    };
  }
  rpc GetAdmin(GetAdminRequest) returns (GetAdminResponse) {
    option (google.api.http) = {get: "/api/admin/detail/{id}"};
  }
  rpc DeleteAdmin(DeleteAdminRequest) returns (DeleteAdminResponse) {
    option (google.api.http) = {delete: "/api/admin/delete/{id}"};
  }

  rpc ListAdminRoles(ListAdminRolesRequest) returns (ListAdminRolesResponse) {
    option (google.api.http) = {get: "/api/admin/role/list"};
  }
}

message ListAdminsRequest {
  option (sphere.binding.default_location) = BINDING_LOCATION_QUERY;

  int64 page = 1 [(buf.validate.field).int64.gte = 0];
  int64 page_size = 2 [(buf.validate.field).int64.gte = 0];
}

message ListAdminsResponse {
  repeated entpb.Admin admins = 1;
  int64 total_size = 2;
  int64 total_page = 3;
}

message CreateAdminRequest {
  entpb.Admin admin = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "admin_password_min_length"
      expression: "size(this.password) == 0 || size(this.password) >= 8"
      message: "密码长度不能小于8位"
    },
    (buf.validate.field).cel = {
      id: "admin_username_not_empty"
      expression: "size(this.username) > 0"
      message: "用户名不能为空"
    }
  ];
}

message CreateAdminResponse {
  entpb.Admin admin = 1;
}

message UpdateAdminRequest {
  entpb.Admin admin = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).cel = {
      id: "admin_id_not_zero"
      expression: "this.id != 0"
      message: "管理员ID必须存在"
    },
    (buf.validate.field).cel = {
      id: "admin_password_min_length"
      expression: "size(this.password) == 0 || size(this.password) >= 8"
      message: "密码长度不能小于8位"
    }
  ];
}

message UpdateAdminResponse {
  entpb.Admin admin = 1;
}

message GetAdminRequest {
  int64 id = 1 [(sphere.binding.location) = BINDING_LOCATION_URI];
}

message GetAdminResponse {
  entpb.Admin admin = 1;
}

message DeleteAdminRequest {
  int64 id = 1 [(sphere.binding.location) = BINDING_LOCATION_URI];
}

message DeleteAdminResponse {}

message ListAdminRolesRequest {}

message ListAdminRolesResponse {
  repeated string roles = 1;
}

enum AdminError {
  option (sphere.errors.default_status) = 500;
  ADMIN_ERROR_UNSPECIFIED = 0;
  ADMIN_ERROR_CANNOT_DELETE_SELF = 1001 [(sphere.errors.options) = {
    status: 400
    message: "不能删除当前登录的管理员账号"
  }];
}
